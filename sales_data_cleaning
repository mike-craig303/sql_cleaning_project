# Importing CSV's into pgAdmin
# This had to be done for each year (2013-2020) but the columns were identical each year thus the process was easy to replicate and repeated for each year.
# While there were quirks unique to each year's data, I will be focusing specifically on year 2013 and will include additional steps taken in subsequent years if necessary.
# The 2019 data reflected the most accurate POS categorization of all items sold and served as the template for ammending previous data sets. 

CREATE TABLE beet_2013
                      (date DATE,
                      time_zone TEXT,
                      time VARCHAR,
                      category TEXT,
                      item TEXT,
                      sku NUMERIC,
                      qty NUMERIC,
                      price_point_name TEXT,
                      modifiers_applied TEXT,
                      gross_sales MONEY,
                      net_sales MONEY,
                      payment_id VARCHAR,
                      device_name TEXT,
                      details VARCHAR,
                      customer_id VARCHAR,
                      customer_name VARCHAR,
                      customer_reference_id VARCHAR,
                      event_type TEXT,
                      location TEXT,
                      unit TEXT,
                      count NUMERIC)
                      
COPY beet_2013 to '/Users/Pickle/Documents/data analytics/Beet Box Data/Item Sales'
delimiter ',' csv header;                      

# The goal of this project is clean up the item sales data so I can visualize it in Tableau.
# This requires dropping several columns which are irrelevant for our purposes and take too much of my storage space on Tableau.

ALTER TABLE beet_2013
DROP COLUMN "Time Zone",
DROP COLUMN	"SKU",
DROP COLUMN "Payment ID",
DROP COLUMN "Device Name",
DROP COLUMN "Notes",
DROP COLUMN "Details",
DROP COLUMN "Dining Option",
DROP COLUMN "Customer ID",
DROP COLUMN "Customer Name",
DROP COLUMN "Customer Reference ID"

# Converting date column
# Originally date was listed YYYY-MM-DD, for my purposes I am only interested in the year, however, 
# it would be too severe to cut month and day from data, especially if I ever wanted to use the date for another project.

ALTER TABLE beet_2013
ALTER COLUMN date TYPE DATE USING to_date(date, 'MM-DD-YY')

# Updating qty column.
# The POS would record quantity based how items were categorized. Since items would be sold at different prices for half dozen or dozen, 
# Square would record the qty of a half dozen donuts as 1 (ie: one order of a half dozen donuts).  

UPDATE beet_2013
SET qty = qty * 6
WHERE "Price Point Name" = 'Half dozen'

UPDATE beet_2013
SET qty = qty * 12
WHERE "Price Point Name" = 'Dozen'

# Investigating item sales listed as custom amounts.
# This is where things got really messy, particularly in the early years before there were user controls on the POS.

SELECT *
FROM beet_2013
WHERE item = 'Custom Amount'

# After running this query, some lines would come up with clues in the price_point_name or category column and the items could be updated accordingly.
# The total gross sales of items listed as custom amount were 10% in 2013 alone! However, subsequent years the custom amount gross sales comprised only 1-2% of total gross sales.

SELECT sum(gross_sales), (
      SELECT sum(gross_sales) AS custom_gross
      FROM beet_2013
      WHERE item = 'Custom Amount')
FROM beet_2013

# Since the purpose of this project is to provide clean data for visualizations, and not hardcore financial analysis, I decided to remove custom amounts.




